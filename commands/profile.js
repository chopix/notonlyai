import {Composer} from "telegraf";
import {sendErrorMessage} from "../helpers/errorAndTokensExpired.js";
import frame from "../helpers/frame.js";
import moment from 'moment'
import {User} from "../models/User.js";
import {Subscribers} from "../models/Subscribers.js";

const composer = new Composer()


composer.command('profile', async (ctx) => {
  const tgId = ctx.from.id;
  const user = await User.findOne({
    where: {
      tgId: tgId
    }
  })
  const subscriber = await Subscribers.findOne({
    where: {
      tgId: tgId
    }
  })
  let gptMessagesCount = JSON.parse(user.gptMessages).length;
  let dalleMessagesCount = JSON.parse(user.dalleMessages).length;
  let lost =
    "–¥–æ " +
    moment(moment(subscriber.start))
      .add(subscriber.period, "d")
      .format("DD-MM-YYYY hh:mm");
  let reg_date = moment(subscriber.createdAt).format("DD-MM-YYYY hh:mm");
  return ctx
          .reply(
              `<b>–¢–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å üíº</b>\n\n${user.isAdmin === true ? '<i><b>–†–æ–ª—å  ‚Äî </b> –ê–¥–º–∏–Ω üí™</i>' : ''}\n\n\n–ü–æ–¥–ø–∏—Å–∫–∞ ‚Äî <b>${subscriber.active === false ? '–ù–µ–∞–∫—Ç–∏–≤–Ω–∞' : '–ê–∫—Ç–∏–≤–Ω–∞'}</b> ‚ö°Ô∏è\n${subscriber.active === true ? `–î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ ‚Äî ${lost}‚è≥` : ''}<b></b>\n\n<b>–õ–∏–º–∏—Ç—ã:</b>\n/circle ‚Äî –Ω–µ—Ç –ª–∏–º–∏—Ç–æ–≤ üîπ\n/draw ‚Äî –Ω–µ—Ç –ª–∏–º–∏—Ç–æ–≤ üîπ\n/upscale ‚Äî –Ω–µ—Ç –ª–∏–º–∏—Ç–æ–≤ üîπ\n/erase ‚Äî –Ω–µ—Ç –ª–∏–º–∏—Ç–æ–≤ üîπ\n/revise ‚Äî –Ω–µ—Ç –ª–∏–º–∏—Ç–æ–≤ üîπ\n/gpt ‚Äî ${subscriber.active === false ? `${4 - Number(user.freeRequests)} ${frame.sklonenie(4 - Number(user.freeRequests), ["—Ç–æ–∫–µ–Ω", "—Ç–æ–∫–µ–Ω–∞", "—Ç–æ–∫–µ–Ω–æ–≤"])} –≤ GPT-3.5` : '–Ω–µ—Ç –ª–∏–º–∏—Ç–æ–≤'} ${(subscriber.active === false && user.freeRequests === 4) ? "‚ùå" : "üîπ"} \n\n\<b>–ö–æ–ª-–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ GPT –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è  ‚Äî ${gptMessagesCount}\n–ö–æ–ª-–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ DALL-E –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è  ‚Äî ${dalleMessagesCount}</b> \n\n<i>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è ‚Äî ${reg_date}</i>`, {
                  parse_mode: "html",
                  reply_markup: {
                      inline_keyboard: [
                          [{
                              text: "–ü—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É ‚ö°Ô∏è",
                              callback_data: "subscribe",
                          }, ],
                      ],
                  },
                  disable_web_page_preview: true,
              }
          )
})



export default composer